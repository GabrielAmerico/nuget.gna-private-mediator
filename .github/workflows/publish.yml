name: Publish to NuGet

on:
  push:
    tags:
      - 'v*.*.*'   # dispara apenas quando criar uma tag do tipo v1.0.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # necessário para capturar tags

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'  # SDK para build; compila netstandard2.1 sem problema

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build -o ./artifacts /p:PackageVersion=${{ env.VERSION }}

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          echo "Conteúdo da pasta artifacts:"
          ls -la ./artifacts || true

          # habilita nullglob para que arquivos inexistentes não quebrem o shell
          shopt -s nullglob

          files=(./artifacts/*.nupkg)

          if [ ${#files[@]} -eq 0 ]; then
            echo "::error::Nenhum .nupkg encontrado em ./artifacts — verifique o step 'Pack NuGet package'."
            exit 1
          fi

          for pkg in "${files[@]}"; do
            echo "Publicando $pkg ..."
            dotnet nuget push "$pkg" \
              --api-key "$NUGET_API_KEY" \
              --source "https://api.nuget.org/v3/index.json" \
              --skip-duplicate
          done
